<project name="RestFixture" default="full" basedir=".">
	<record name="${basedir}/${ant.project.name}.build.log" loglevel="verbose" />

	<property file="properties/${user.name}.properties" />
	<property file="build.properties" />

	<property name="fitnesse.root.name" value="FitNesseRoot" />
	<property name="fitnesse.root" value="${fitnesse.home}/${fitnesse.root.name}" />
	<property name="fitnesse.path" value="${ant.project.name}Tests" />
	<property name="fitnesse.test.root" value="${fitnesse.root}/${fitnesse.path}" />
	<property name="src.unit" value="${basedir}/src/test/java" />
	<property name="src.cat" value="${basedir}/src/test/fitnesse" />
	<property name="src" value="${basedir}/src/main/java" />
	<property name="resources" value="${basedir}/src/main/resources" />
	<property name="build" value="${basedir}/build" />
	<property name="build.fitnesse.home" value="${basedir}/build/fitnesse" />
	<property name="build.fitnesse.root" value="${build.fitnesse.home}/${fitnesse.root.name}" />
	<property name="build.fitnesse.test.root" value="${build.fitnesse.root}/${fitnesse.path}" />
	<property name="dist" value="${basedir}/dist" />
	<property name="lib" value="${basedir}/lib" />
	<property name="reports" value="${build}/reports" />
	<property name="fitnesse.reports" value="${reports}/fitnesse" />
	<property name="artifacts" value="${dist}/artifacts" />

	<filterset id="fitnesse-build">
		<filter token="FITNESSE_HOME" value="${build.fitnesse.home}" />
		<filter token="FITNESSE_TEST_ROOT" value="${build.fitnesse.test.root}" />
	</filterset>

	<filterset id="fitnesse">
		<filter token="FITNESSE_HOME" value="${fitnesse.home}" />
		<filter token="FITNESSE_TEST_ROOT" value="${fitnesse.test.root}" />
	</filterset>

	<path id="project.classpath">
		<pathelement location="${src.resources}" />
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<path id="test.classpath">
		<path refid="project.classpath" />
		<pathelement location="${build}/classes/main" />
		<pathelement location="${build}/classes/unit" />
	</path>

	<target name="full" depends="clean, package, fitnesse-test-remote, dist" />

	<target name="init">
		<mkdir dir="${build}" />
		<mkdir dir="${reports}" />
	</target>

	<target name="clean">
		<delete dir="${build}" />
		<delete dir="${dist}" />
	</target>

	<target name="compile" depends="init">
		<mkdir dir="${build}/classes/main" />
		<javac includes="**/*.java" debug="${build.debug}" destdir="${build}/classes/main">
			<src path="${src}" />
			<classpath refid="project.classpath" />
		</javac>
	</target>

	<target name="test" depends="compile">
		<mkdir dir="${build}/classes/unit" />
		<mkdir dir="${reports}/unit" />
		<javac debug="${build.debug}" destdir="${build}/classes/unit">
			<classpath refid="test.classpath" />
			<src path="${src.unit}" />
			<include name="**/*.java" />
		</javac>
		<junit errorproperty="test.failed">
			<classpath refid="test.classpath" />
			<formatter type="plain" />
			<batchtest fork="yes" todir="${reports}/unit">
				<fileset dir="${src.unit}">
					<include name="**/*Test.java" />
				</fileset>
			</batchtest>
		</junit>
		<fail if="test.failed" />
	</target>

	<target name="compile-cat" depends="compile">
		<mkdir dir="${build}/classes/cat" />
		<javac includes="**/*.java" debug="${build.debug}" destdir="${build}/classes/cat">
			<src path="${src.cat}" />
			<classpath refid="test.classpath" />
		</javac>
	</target>

	<target name="package" depends="compile,compile-cat">
		<jar destfile="${build}/${ant.project.name}.jar" basedir="${build}/classes/main" includes="**/*" />
		<jar destfile="${build}/${ant.project.name}_fitnesse.jar" basedir="${build}/classes/cat" includes="**/*" excludes="**/*.jar" />
	</target>

	<target name="fitnesse-deploy" depends="package">
		<delete dir="${fitnesse.test.root}" />
		<mkdir dir="${fitnesse.test.root}/lib" />
		<copy todir="${fitnesse.test.root}/lib" flatten="true">
			<fileset dir="build">
				<include name="*.jar" />
			</fileset>
			<fileset dir="lib">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${resources}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<copy todir="${fitnesse.test.root}" overwrite="true">
			<filterset refid="fitnesse" />
			<fileset dir="fitdocs/${fitnesse.path}" />
		</copy>
	</target>

	<target name="fitnesse-copy" depends="package" if="execute.cat">
		<delete dir="${build.fitnesse.test.root}" />
		<mkdir dir="${build.fitnesse.test.root}/lib" />
		<copy todir="${build.fitnesse.test.root}/lib" flatten="true">
			<fileset dir="${build}">
				<include name="*.jar" />
			</fileset>
			<fileset dir="${lib}">
				<include name="**/*.jar" />
			</fileset>
			<fileset dir="${resources}">
				<include name="**/*.*" />
			</fileset>
		</copy>
        <copy todir="${build.fitnesse.home}/etc">
            <fileset dir="etc" includes="**/*.*" />
        </copy>
		<copy todir="${build.fitnesse.test.root}" overwrite="true">
			<filterset refid="fitnesse-build" />
			<fileset dir="fitdocs/${fitnesse.path}" />
		</copy>
	</target>

    <target name="fitnesse-test-remote" depends="fitnesse-deploy,fitnesse-exec-test,check.fitnesse.failure" if="execute.cat" />
    <target name="fitnesse-test" depends="fitnesse-start,fitnesse-copy,fitnesse-exec-test,fitnesse-stop,check.fitnesse.failure" if="execute.cat" />

	<target name="check.fitnesse.failure">
        <!-- check if build needs to fail -->
        <condition property="fitnesse.fail">
            <not>
                <equals arg1="0" arg2="${fitnesse.result}" />
            </not>
        </condition>
        <fail if="fitnesse.fail" message="FitNesse tests failed, see reports in '${fitnesse.reports}/results.html' for details." />
        <!-- FitNesseRoot/files is hardcoded in the RestFixtureWithSeq -->
        <move todir="${fitnesse.reports}">
            <fileset dir="${fitnesse.root.name}" includes="**/*.*" />
        </move>
        <delete dir="${fitnesse.reports}" />
	</target>
	
    <target name="fitnesse-start" if="execute.cat">
    	<mkdir dir="${build.fitnesse.home}/log"/>
        <java classname="fitnesse.FitNesse" fork="true" spawn="true">
            <arg value="-p" />
            <arg value="${fitnesse.port}" />            
            <arg value="-d" />
            <arg value="${build.fitnesse.home}" />    
            <arg value="-l" />
            <arg value="${build.fitnesse.home}/log" />          
            <arg value="-e" />
            <arg value="20" />
            <classpath>
                <pathelement location="${build.fitnesse.test.root}/lib/fitnesse.jar" />
            </classpath>
        </java>
    	<sleep seconds="2"/>
    </target>

	<target name="fitnesse-stop" if="execute.cat">
        <java classname="fitnesse.Shutdown" resultproperty="fitnesse.stop.result">
            <arg value="-p" />
            <arg value="${fitnesse.port}" />            
            <classpath>
                <pathelement location="${build.fitnesse.test.root}/lib/fitnesse.jar" />
            </classpath>
        </java>
        <condition property="fitnesse.stop.fail">
            <not>
                <equals arg1="0" arg2="${fitnesse.stop.result}" />
            </not>
        </condition>
        <fail if="fitnesse.stop.fail" message="FitNesse failed to stop. fitnesse.stop.result: ${fitnesse.stop.result}" />
    </target>
	
	<target name="fitnesse-exec-test" if="execute.cat">
		<property name="fitnesse.suite.root" value="${fitnesse.path}.BasicTests" />
		<mkdir dir="${fitnesse.reports}" />
		<java classname="fitnesse.runner.TestRunner" fork="true" resultproperty="fitnesse.result">
			<arg value="${fitnesse.host}" />
			<arg value="${fitnesse.port}" />
			<arg value="${fitnesse.suite.root}" />
			<arg value="-nopath" />
			<arg value="-v" />
			<arg value="-debug" />
			<arg value="-results" />
			<arg value="${fitnesse.reports}/results.raw" />
			<classpath>
				<pathelement location="${build}/${ant.project.name}.jar" />
				<pathelement location="${build}/${ant.project.name}_fitnesse.jar" />
				<path refid="project.classpath" />
			</classpath>
		</java>
		<!-- format data in html -->
		<java classname="fitnesse.runner.FormattingOption" fork="true">
			<arg value="${fitnesse.reports}/results.raw" />
			<arg value="html" />
			<arg value="${fitnesse.reports}/results.html" />
			<arg value="${fitnesse.host}" />
			<arg value="${fitnesse.port}" />
			<arg value="${fitnesse.suite.root}" />
			<classpath>
				<pathelement location="${build}/${ant.project.name}.jar" />
				<pathelement location="${build}/${ant.project.name}_fitnesse.jar" />
				<path refid="project.classpath" />
			</classpath>
		</java>
	</target>

	<target name="dist-doc" if="execute.cat">
		<copy tofile="${artifacts}/docs/docs.html" file="${reports}/fitnesse/results.html" failonerror="false" />
		<copy todir="${artifacts}/docs" flatten="true">
			<fileset dir="${fitnesse.reports}" includes="**/*.*" excludes="results.*" />
		</copy>
		<replace file="${artifacts}/docs/docs.html" token="base href" value="xbase href" />
		<replace file="${artifacts}/docs/docs.html" token="/files" value="http://fitnesse.org/files" />
		<replace file="${artifacts}/docs/docs.html" token="files/restfixture/" value="" />
	</target>

	<target name="dist">
		<delete dir="${dist}" />
		<mkdir dir="${artifacts}" />
		<copy todir="${artifacts}" file="${build}/${ant.project.name}.jar" />
		<copy todir="${artifacts}" file="${build}/${ant.project.name}_fitnesse.jar" />
		<copy todir="${artifacts}/lib" flatten="true">
			<fileset dir="lib" includes="**/*.jar" excludes="test/**/*.jar, fitnesse/**/*.jar, log4j/**/*.jar" />
		</copy>
		<copy todir="${artifacts}/etc">
			<fileset dir="etc" includes="**/*.*" />
		</copy>
		<copy todir="${artifacts}" file="COPYING" />
		<copy todir="${artifacts}" file="COPYING.LESSER" />
		<copy todir="${artifacts}" file="COPYRIGHT" />
		<copy todir="${artifacts}" file="README" />
		<tstamp>
			<format property="TS" pattern="yyyyMMdd" locale="en,UK" />
		</tstamp>
		<antcall target="dist-doc" />
		<zip destfile="dist/RestFixture-nodep-${TS}.zip" basedir="${artifacts}" casesensitive="true" compress="true" includes="**/*" excludes="lib/**/*.jar" />
		<zip destfile="dist/RestFixture-${TS}.zip" basedir="${artifacts}" casesensitive="true" compress="true" includes="**/*" />
		<zip destfile="dist/RestFixture-docs-${TS}.zip" basedir="${artifacts}/docs" casesensitive="true" compress="true" includes="**/*" />
	</target>

</project>